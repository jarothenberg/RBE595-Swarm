#
# In the ARGoS window, you can move the camera with the following commands:
#
# - Translation: W A S D Q E keys, right-click + drag
# - Rotation: left-click + drag
#
# Selection: shift-click on the robot
# Remove selection: shift-click elsewhere
#
# Bug: selection is finnicky in the top-down view (Camera 1).
# Solution: switch to another camera and it'll work.
#

#
# Compiling and running the code
#
# - In the ARGoS window: Pause the simulation (if it's not paused already)
# - In the editor: do what you need, save, press the "Execute" button
# - In the ARGoS window: Press the "Play", "Step", or "Fast Forward" buttons
#

#
# This editor sucks.
#
# I know.
#
# But when it's open, it detects whether the open files have been modified elsewhere.
# So open this editor and then open the file you wanna edit in your favorite editor.
# When you save in your editor, the changes will be reflected here. Press Execute to compile and run.
# If you want syntax highlighting, JavaScript is pretty similar to Buzz.
#

include "../../Buzz/src/include/vec2.bzz"

function diffuse() {	
	# Get and sum proximity readings together
	cAccumulator = math.vec2.new(0.0, 0.0)
	foreach(proximity, function(key,prox) {
		cAccumulator = math.vec2.add(cAccumulator, math.vec2.newp(prox.value, prox.angle))
	})
	
	cAccumulator = math.vec2.scale(cAccumulator, 1.0/size(proximity))
	# If the angle of the vector is small enough and the closest obstacle
	# is far enough, continue going straight, otherwise curve a little
	cAngle = math.vec2.angle(cAccumulator)
	#if (id == 22) {log(cAngle)}
	if(math.vec2.length(cAccumulator) <= m_fDelta) {
		# Go straight 
		set_wheels(m_fWheelVelocity, m_fWheelVelocity)
	}
	else {
		# Turn, depending on the sign of the angle
		if(cAngle > 0.0) {
			set_wheels(m_fWheelVelocity, 0.0)
		}
		else {
			set_wheels(0.0, m_fWheelVelocity)
		}
	}
}


# This function is executed once at init time
function init() {
	m_fWheelVelocity = 5.0
	m_fDelta = 0.0

	if (id % 2 == 0) {
		set_leds(255,0,0)
	}
	else {
		set_leds(0,0,255)
	}
}

# This function is executed at each time step
# The main loop is controller by ARGoS
function step() {
	diffuse()
}

# This function is executed when you press the reset button
function reset() {
}

# This function is executed once when you close the simulator
function destroy() {
}

